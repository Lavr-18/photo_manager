const API_BASE_URL = "http://37.220.81.157:8088"; // –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–±—Ä–∞–Ω '/api'
let currentPage = 1;
let currentQuery = "";
let totalPages = 1;

const grid = document.getElementById('photos-grid');
const searchInput = document.getElementById('search-input');
const prevBtn = document.getElementById('prev-page');
const nextBtn = document.getElementById('next-page');
const pageInfo = document.getElementById('page-info');
const messageElement = document.getElementById('message');

// --- 1. –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö ---
async function loadPhotos(page, query) {
    messageElement.textContent = '–ó–∞–≥—Ä—É–∑–∫–∞...';
    grid.innerHTML = '';

    try {
        // –ó–∞–ø—Ä–æ—Å –∫ API_BASE_URL + /api/list
        const response = await fetch(`${API_BASE_URL}/api/list?page=${page}&query=${query}`);

        if (!response.ok) {
            const errorBody = await response.json();
            throw new Error(errorBody.detail || `–û—à–∏–±–∫–∞ API: ${response.status}`);
        }

        const data = await response.json();

        data.files.forEach(file => {
            const photoItem = createPhotoElement(file);
            grid.appendChild(photoItem);
        });

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
        currentPage = data.current_page;
        totalPages = data.total_pages;
        pageInfo.textContent = `–°—Ç—Ä–∞–Ω–∏—Ü–∞ ${currentPage} –∏–∑ ${totalPages}`;
        prevBtn.disabled = currentPage <= 1;
        nextBtn.disabled = currentPage >= totalPages;

        messageElement.textContent = data.files.length === 0 ? '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.' : '';

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ:', error);
        messageElement.textContent = `–û—à–∏–±–∫–∞: ${error.message}`;
        prevBtn.disabled = true;
        nextBtn.disabled = true;
    }
}

// --- 2. –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –∫–Ω–æ–ø–æ–∫ ---
function createPhotoElement(file) {
    const item = document.createElement('div');
    item.className = 'photo-item';

    // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const img = document.createElement('img');
    img.src = `${API_BASE_URL}${file.preview_url}`;
    img.alt = file.name;
    item.appendChild(img);

    // –ò–º—è —Ñ–∞–π–ª–∞
    const name = document.createElement('p');
    name.textContent = file.name;
    name.title = file.name;
    item.appendChild(name);

    // –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
    const actions = document.createElement('div');
    actions.className = 'actions';

    // –ö–Ω–æ–ø–∫–∞ 1: –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É (–û—Å—Ç–∞–µ—Ç—Å—è)
    const copyLinkBtn = document.createElement('button');
    copyLinkBtn.textContent = 'üîó –°—Å—ã–ª–∫–∞';
    copyLinkBtn.onclick = () => copyTextToClipboard(file.https_url);
    actions.appendChild(copyLinkBtn);

    // –ö–Ω–æ–ø–∫–∞ 2: –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ (–í–æ–∑–≤—Ä–∞—â–µ–Ω–∞)
    const copyImageBtn = document.createElement('button');
    copyImageBtn.textContent = 'üñºÔ∏è –§–æ—Ç–æ';
    copyImageBtn.onclick = () => copyImageToClipboard(file.https_url);
    actions.appendChild(copyImageBtn);

    // –ö–Ω–æ–ø–∫–∞ 3: –°–∫–∞—á–∞—Ç—å —Ñ–æ—Ç–æ (–ù–æ–≤–∞—è, –Ω–∞–¥–µ–∂–Ω–∞—è)
    const downloadBtn = document.createElement('button');
    downloadBtn.textContent = '‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å';
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º API_BASE_URL + preview_url + ?download=true
    const downloadUrl = `${API_BASE_URL}${file.preview_url}?download=true`;
    downloadBtn.onclick = () => downloadFile(downloadUrl, file.name);
    actions.appendChild(downloadBtn);

    item.appendChild(actions);
    return item;
}

// --- 3. –§—É–Ω–∫—Ü–∏–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è/—Å–∫–∞—á–∏–≤–∞–Ω–∏—è ---

// –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
function copyTextToClipboard(text) {
    navigator.clipboard.writeText(text)
        .then(() => {
            messageElement.textContent = '–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!';
            setTimeout(() => messageElement.textContent = '', 2000);
        })
        .catch(err => {
            console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏:', err);
            messageElement.textContent = '–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è!';
        });
}

// –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ (–í–û–ó–í–†–ê–©–ï–ù–ê)
async function copyImageToClipboard(imageUrl) {
    try {
        messageElement.textContent = '–ó–∞–≥—Ä—É–∂–∞—é –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è...';

        // 1. –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞–∫ Blob —Å –µ–≥–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ HTTPS URL
        // –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ CORS, —Ç–∞–∫ –∫–∞–∫ https://tropicbridge.site/ - —ç—Ç–æ –≤–Ω–µ—à–Ω–∏–π –¥–æ–º–µ–Ω
        const response = await fetch(imageUrl);
        if (!response.ok) throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.");

        const imageBlob = await response.blob();

        // 2. –ò—Å–ø–æ–ª—å–∑—É–µ–º Clipboard API
        const item = new ClipboardItem({ [imageBlob.type]: imageBlob });
        await navigator.clipboard.write([item]);

        messageElement.textContent = '–§–æ—Ç–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!';
        setTimeout(() => messageElement.textContent = '', 2000);

    } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–æ—Ç–æ:', err);
        messageElement.textContent = '–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–æ—Ç–æ. –î–æ–º–µ–Ω –Ω–µ —Ä–∞–∑—Ä–µ—à–∞–µ—Ç (CORS)!';
    }
}

// –§—É–Ω–∫—Ü–∏—è: –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ (–ò–°–ü–†–ê–í–õ–ï–ù–ê, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç API-—ç–Ω–¥–ø–æ–∏–Ω—Ç)
function downloadFile(url, filename) {
    try {
        messageElement.textContent = '–ò–Ω–∏—Ü–∏–∏—Ä—É—é —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ...';

        const link = document.createElement('a');
        link.href = url;
        link.download = filename;

        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);

        messageElement.textContent = '–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –Ω–∞—á–∞—Ç–æ!';
        setTimeout(() => messageElement.textContent = '', 2000);

    } catch (err) {
        console.error('–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:', err);
        messageElement.textContent = '–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞!';
    }
}

// --- 4. –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π ---

// –ü–æ–∏—Å–∫ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π (debounce)
let searchTimeout;
searchInput.addEventListener('input', () => {
    clearTimeout(searchTimeout);
    searchTimeout = setTimeout(() => {
        currentQuery = searchInput.value;
        loadPhotos(1, currentQuery);
    }, 500);
});

// –ü–∞–≥–∏–Ω–∞—Ü–∏—è
prevBtn.addEventListener('click', () => {
    if (currentPage > 1) {
        loadPhotos(currentPage - 1, currentQuery);
    }
});

nextBtn.addEventListener('click', () => {
    if (currentPage < totalPages) {
        loadPhotos(currentPage + 1, currentQuery);
    }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', () => {
    loadPhotos(currentPage, currentQuery);
});